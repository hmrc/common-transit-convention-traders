#%RAML 1.0
---
title: CTC Traders

protocols: [ HTTPS ]
baseUri: https://common-transit-convention-traders.hmrc.gov.uk/
version: v0.1

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Errors
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md

mediaType: application/xml

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

/customs/transits/movements:
  /arrivals:
    post:
      displayName: Send an arrival notification
      description: |
        Send a notification to let the Office of Destination know that the goods have arrived. This message will be sent when the goods reach their final destination. It is also called an E_ARR_NOT (IE007).

        The location header in the response will contain a URI and arrival ID for the arrival notification. This will allow you to get the message status.

        If the user is not enrolled for an Economic Operator Registration and Identification number, they will receive a HTTP 403 Forbidden status. 
      is: [headers.acceptHeader]
      (annotations.scope): "common-transit-convention-traders"
      securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
      responses:
        202:
          headers:
            Location:
              description: The URI to get the arrival notification, including an arrival ID
              example: /customs/transits/movements/arrivals/123456
          body:
            application/xml:
              description: Valid XML Payload
              example: |
                <IE007>
                </IE007>
    get:
      displayName: Pull all Movement Arrivals
      description: |
        Pull all Movement Arrivals sent to the Office of Destination within 21 days of the goods being released. Any Movement Arrivals more than 21 days old will be archived along with their related messages. Archived movements will return a HTTP 404 Not Found status.

        You will only be able to retrieve these messages if you have the correct Economic Operator Registration and Identification (EORI) number for that Movement Arrival.
      is: [headers.acceptHeader]
      (annotations.scope): "common-transit-convention-traders"
      securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
      responses:
        200:
          body:
            application/json:
              description: JSON Payload
              example: |
                {
                   "arrivals":[
                      {
                         "body":"<IE007>....</IE007>"
                      }
                   ]
                }
            application/xml:
              description: Valid XML Payload
              example: |
                <IE007>....</IE007>
    /{arrivalId}:
      put:
        displayName: Resubmit an arrival notification
        description: |
        Resubmit an arrival notification to let the Office of Destination know that the goods have arrived. This message will be sent when the goods reach their final destination. It is also called an E_ARR_NOT (IE007).

        The location header in the response will contain an arrival ID for the arrival notification. This will allow you to get the message status.

        If the user is not enrolled for an Economic Operator Registration and Identification number, they will receive a HTTP 403 Forbidden status.
        is: [headers.acceptHeader]
        (annotations.scope): "common-transit-convention-traders"
        securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
        responses:
          202:
            headers:
              Location:
                description: The uri to retrieve the arrival notification, including arrival ID
                example: /customs/transits/movements/arrivals/{arrivalId}
      get:
        displayName: Pull a Movement Arrival for an arrival ID
        description: |
          Pull a specific Movement Arrival which was sent to the Office of Destination within 21 days of the goods being released. Any Movement Arrivals more than 21 days old will be archived along with their related messages. Archived movements will return a HTTP 404 Not Found status.

          You will only be able to retrieve these messages if you have the correct Economic Operator Registration and Identification (EORI) number for that Movement Arrival
        is: [headers.acceptHeader]
        (annotations.scope): "common-transit-convention-traders"
        securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
        responses:
          200:
            body:
              application/json:
                description: JSON Payload
                example: |
                  {
                    "arrival": {
                      "body": "<IE007>....</IE007>"
                      }
                  }
          404:
            description: When a Movement Arrival does not exist, has been archived or is not available to the EORI number.
      /messages:
        post:
          displayName: Send a message related to an arrival movement
          description: |
            Send a message to the Office of Destination.  For example, an an Unloading Remarks message, otherwise known as E_ULD_REM (IE044), to let them know that the goods have been unloaded.

            If the user is not enrolled for an Economic Operator Registration and Identification number, they will receive a HTTP 403 Forbidden status. 
          (annotations.scope): "common-transit-convention-traders"
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
          responses:
            202:
              headers:
                Location:
                  description: The URI to retrieve the arrival notification, including arrival ID
                  example: /customs/transits/movements/arrivals/123456/messages
              body:
                application/xml:
                  description: Valid XML Payload
                  example: |
                    <IE044>...</IE044>
        get:
          displayName: Pull all messages that relate to a Movement Arrival
          description: |
            Pull all the messages to do with a Movement Arrival. Any Movement Arrivals more than 21 days old will be archived along with their related messages. Any Movement Arrivals more than 21 days old will be archived along with their related messages. Archived movements will return a HTTP 404 Not Found status.

            You will only be able to retrieve these messages if you have the correct Economic Operator Registration and Identification (EORI) number for that Movement Arrival.
          (annotations.scope): "common-transit-convention-traders"
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
          responses:
            200:
              body:
                application/json:
                  description: A JSON list containing messages with an XML body
                  example: |
                    {
                        "arrival": "/movements/arrivals/123",
                        "created": "2020-03-20",
                        "updated": "2020-03-20",
                        "movementReferenceNumber":"MRN",
                        "status", "arrival notification received"
                        "messages": [
                            {
                                "message": "/movements/arrivals/1234/messages/456"
                                "received": "2020-01-01",
                                "body": "<CC025A>...</CC025A>"
                            },
                            {
                                "message": "/movements/arrivals/1234/messages/789"
                                "received": "2020-01-02",
                                "body": "<CC043A>...</CC043A>"
                            }
                        ]
                    }
            404:
              description: When the arrival movement does not exist, has been archived or is not available to the EORI number.
        /{messageId}:
          get:
            displayName: Pull a message relating to a Movement Arrival and message ID
            description: |
              Pull all messages relating to a specific Movement Arrival and message ID. For example, this could include messages about route diversions or unloading permissions. Any Movement Arrivals more than 21 days old will be archived along with their related messages. Archived movements will return a HTTP 404 Not Found status.

              You will only be able to retrieve these messages if you have the correct Economic Operator Registration and Identification (EORI) number for that Movement Arrival.
            (annotations.scope): "common-transit-convention-traders"
            securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
            responses:
              200:
                body:
                  application/xml:
                    description: Valid XML Payload
                    example: |
                      {
                        date: "2020-12-30",
                        body: "<CC058A>....</CC058A>"
                      }
              404:
                description: When a message does not exist, has been archived or is not available to the EORI number.
  /departures:
    post:
      displayName: Send a departure notification
      description: |
        Send a message to let the Office of Departure know that the goods are on route to their final destination. This message will be sent when the goods leave the Office of Departure. It is also called an E_DEC_DAT (IE015).
        The location header in the response will contain a URI and departure ID forthe departure notification. This will allow you to retrieve the submission status and relating status messages. The submission status will be either “pending” or “success”.
        A “pending” status means the departure notification has not got to the NCTS yet. A “success” status means the departure notification is being processed by the NCTS.
      is: [headers.acceptHeader]
      (annotations.scope): "common-transit-convention-traders"
      securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
      responses:
        202:
          headers:
            Location:
              description: The uri to retrieve the departure notification, including departure ID
              example: /customs/transits/movements/departures/123456
          body:
            application/xml:
              description: Valid XML Payload
              example: |
                <IE015>...</IE015>
    get:
      displayName: Pull all departure notifications
      description: |
        Pull all departure messages sent to the Office of Departures within 21 days of the goods being released at their final destination.
      is: [headers.acceptHeader]
      (annotations.scope): "common-transit-convention-traders"
      securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
      responses:
        200:
          body:
            application/json:
              description: JSON list of departures with XML body
              example: |
                {
                   "departures":[
                      {
                        "date": "2021-01-15",
                         "body":"<IE015>....</IE015>"
                      },
                      {
                        "date": "2021-01-16",
                         "body":"<IE015>....</IE015>"
                      }
                   ]
                }
    /{departureId}:
      get:
        displayName: Pull a departure notification for a departure ID
        description: |
          Pull a specific departure message which was sent to the Office of Departure within21 days of the goods being released at their final destination. Any departure notifications that are more than 21 days old will be archived. Archived notifications will be return a “not found” status.
        is: [headers.acceptHeader]
        (annotations.scope): "common-transit-convention-traders"
        securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
        responses:
          200:
            headers:
              SubmissionStatus:
                description: The status of the notification submission, either Pending or Success
                example: Pending
            body:
              application/xml:
                description: Valid XML Payload
                example: |
                  <IE015></IE015>
              application/json:
                description: JSON departure
                example: |
                  {
                    "date": "2021-01-15",
                     "body":"<IE015>....</IE015>"
                  }
          404:
            description: when departure movement does not exist, has been archived or is not available to the eori.
      /messages:
        post:
          displayName: Send a message related to a departure movement
          description: |
            Send a message to the Office of Destination.
          (annotations.scope): "common-transit-convention-traders"
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
          responses:
            202:
              headers:
                Location:
                  description: The uri to retrieve the departure notification, including arrival ID
                  example: /customs/transits/movements/departures/123456/messages
              body:
                application/xml:
                  description: Valid XML Payload
                  example: |
                    <IE0XX>...</IE0XX>
        get:
          displayName: Pull all messages relating to a departure movement
          description: |
            Pull all messages sent within 21 days of the goods being released relating to a departure movement. You will only be able to retrieve these messages if you have the Economic Operator Registration and Identification (EORI) number associated with the departure movement.
          (annotations.scope): "common-transit-convention-traders"
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
          responses:
            200:
              body:
                application/xml:
                  description: Valid XML Payload
                  example: |
                application/json:
                  description: A json list containing messages with an XML body
                  example: |
                    {
                       "messages":[
                          {
                             "date":"2020-12-31",
                             "body":"<CC0XXA>....</CC0XXA>"
                          },
                          {
                             "date":"2020-12-30",
                             "body":"<CC0XXA>....</CC0XXA>"
                          }
                       ]
                    }
            404:
              description: when the movement does not exist, has been archived or is not available to the eori.
        /{messageId}:
          get:
            displayName: Pull a message relating to a departure movement and message ID
            description: |
              Pull all messages relating to a specific departure movement and message ID. For example, this could include declaration rejected or Movement Reference Number (MRN) allocated messages. Any messages more than 21 days old will be archived. Archived messages will return a “not found” status.
            (annotations.scope): "common-transit-convention-traders"
            securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
            responses:
              200:
                body:
                  application/json:
                    description: JSON Payload
                    example: |
                      {
                         "date":"2020-12-30",
                         "body":"<CC0XXA>....</CC0XXA>"
                      }
              404:
                description: when message does not exist, has been archived or is not available to the eori.