#%RAML 1.0
---
title: CTC Traders
description: The public API to allow traders to submit and receive Common Transit Convention Phase 5 (IE) messages
protocols: [ HTTPS ]
baseUri: https://common-transit-convention-traders.hmrc.gov.uk/
version: 2.0

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Percent-encoding of parameters in request URLs
   content: !include docs/percent-encoding.md
 - title: Errors
   content: !include docs/errors.md

mediaType: [ application/json, application/xml ]

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

traits:
  contentXmlJsonHeader:
    headers:
      Content-Type:
        description: Specifies the format of the request body, which must be XML or JSON, using UTF-8 character encoding.
        type: string
        required: true
        example: application/xml
  acceptJsonHeader:
    headers:
      Accept:
        description: |
          Specifies the response format, which must be JSON, and the [version](/api-documentation/docs/reference-guide#versioning) of the API to be used.
        type: string
        required: true
        example: application/vnd.hmrc.2.0+json
  acceptHeaderInvalid:
    responses:
      406:
        body:
          application/json:
            type: types.errorResponse
            examples:
              badRequest:
                description: The accept header is missing or invalid
                value:
                  code : ACCEPT_HEADER_INVALID
  requestTooLarge:
    responses:
      413:
        body:
          application/json:
            type: types.errorResponse
            examples:
              requestEntityTooLarge:
                description: The request body is too large
                value:
                  code: REQUEST_ENTITY_TOO_LARGE
  schemaValidation:
    responses:
      400:
        body:
          application/json:
            type: types.errorResponse
            examples:
              schemaValidation:
                description: The request body failed schema validation
                value:
                  code: SCHEMA_VALIDATION

/customs/transits/movements:
  /departures:
    post:
      displayName: Send a Declaration Data message
      description: |
        Send a Declaration Data message, to let the office at destination know that the goods are on their way. This notification will be sent when the goods leave the Office of Departure. It is also called an E_DEC_DAT (IE015).

        The response will contain a URI and departure ID for the Declaration Data. This will allow you to retrieve messages related to the movement.
        
        If the user is not enrolled for an EORI number, they will receive an HTTP Forbidden Status.

      is: 
        - contentXmlJsonHeader
        - acceptJsonHeader
        - requestTooLarge
        - schemaValidation
      (annotations.scope): "common-transit-convention-traders"
      securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
      responses:
        202:
          body:
            application/json:
              description: JSON Payload
              example: |
                {
                  "_links": {
                    "self": {
                      "href": "/customs/transits/movements/departures/0123456789abcdef"
                    }
                  },
                  "id": "/customs/transits/movements/departures/0123456789abcdef",
                  "_embedded": {
                    "messages": {
                      "_links": {
                        "href": "/customs/transits/movements/departures/0123456789abcdef/messages"
                      }
                    }
                  }
                }

    /{departureId}:
      /messages:
        get:
          displayName: Get all messages relating to a Movement Departure
          description: |
            Get the IDs of all messages sent within 31 days of the goods being released relating to a Movement Departure. Any Movements that are more than 31 days old will have been archived. Archived notifications will be return an HTTP 404 Not Found status.

            You will only be able to retrieve these messages if you have the EORI number associated with the Movement Departure.
          is:
            - acceptJsonHeader
            - acceptHeaderInvalid
#          queryParameters:
#            receivedSince:
#              required: false
#              type: datetime
#              description: This is an optional filtering parameter. It allows you to request only the messages relating to a Movement Departure which have been received since the date and time you have given us.
#              example: 2021-06-21T09:00+00:00
          (annotations.scope): "common-transit-convention-traders"
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
          responses:
            200:
              body:
                application/json:
                  description: JSON Payload
                  example: |
                    {
                      "_links": {
                        "self": {
                          "href": "/customs/transits/movements/departures/0123456789abcdef/messages"
                        }
                      },
                      "departureId": "/customs/transits/movements/departures/0123456789abcdef",
                      "messageIds": [
                        "/customs/transits/movements/departures/0123456789abcdef/messages/abcdef0123456789",
                        "/customs/transits/movements/departures/0123456789abcdef/messages/abcdef0123456788",
                        "/customs/transits/movements/departures/0123456789abcdef/messages/abcdef0123456787"
                      ]
                    }
            404:
              body:
                application/json:
                  type: types.errorResponse
                  examples:
                    notFound:
                      description: The requested message does not exist, has been archived, or is not available to the EORI number
                      value:
                        code: NOT_FOUND
        /{messageId}:
          get:
            displayName: Get a message relating to a Movement Departure and message ID
            description: |
              Get all messages relating to a specific Movement Departure and message ID. For example, this could include declaration rejected or Movement Reference Number (MRN) allocated messages. Any messages more than 31 days old will be archived. Archived notifications will be return an HTTP 404 Not Found status.

              You will only be able to retrieve these messages if you have the EORI number associated with the Movement Departure.
            is:
              - acceptJsonHeader
              - acceptHeaderInvalid
            (annotations.scope): "common-transit-convention-traders"
            securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders" ] } ]
            responses:
              200:
                body:
                  application/json:
                    description: JSON Payload
                    example: |
                      {
                        "_links": {
                          "self": {
                            "href": "/customs/transits/movements/departures/0123456789abcdef/messages/abcdef0123456789"
                          },
                          "departure": {
                            "href": "/customs/transits/movements/departures/0123456789abcdef"
                          }
                        },
                        "departureId": "/customs/transits/movements/departures/0123456789abcdef",
                        "messageId": "/customs/transits/movements/departures/0123456789abcdef/messages/abcdef0123456789",
                        "received": "2020-10-10T10:10:10",
                        "messageType": "IE015",
                        "body": "<CC015C>...</CC015C>"
                      }
              404:
                body:
                  application/json:
                    type: types.errorResponse
                    examples:
                      notFound:
                        description: The requested message does not exist, has been archived, or is not available to the EORI number
                        value:
                          code: NOT_FOUND